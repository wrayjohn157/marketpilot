# DCA Simulation Configuration
# Configuration for the DCA simulation system

# === Data Settings ===
data:
  # Binance API settings
  binance:
    base_url: "https://api.binance.com/api/v3"
    rate_limit_delay: 0.1  # seconds between requests
    timeout: 30  # seconds
  
  # Cache settings
  cache:
    enabled: true
    directory: "simulation/cache"
    ttl_hours: 24  # cache time-to-live
  
  # Data quality settings
  quality:
    min_candles: 50  # minimum candles required for simulation
    max_missing_pct: 5.0  # maximum percentage of missing data allowed
    price_consistency_check: true

# === Simulation Settings ===
simulation:
  # Default simulation parameters
  defaults:
    simulation_days: 30
    timeframe: "1h"
    max_combinations: 1000
  
  # DCA parameters
  dca:
    # Confidence scoring weights
    confidence_weights:
      rsi: 0.25
      macd: 0.25
      volume: 0.15
      drawdown: 0.20
      dca_count: 0.15
    
    # Volume calculation
    volume:
      base_volume: 100
      scaling_factor: 0.2  # 20% increase per DCA
      confidence_factor: 0.5  # 0.5 to 1.0 multiplier
      max_volume: 500
      min_volume: 10
  
  # Risk management
  risk:
    max_drawdown_pct: 50.0  # maximum drawdown before stopping
    max_dca_count: 15  # maximum DCA orders
    max_spend_ratio: 0.9  # maximum percentage of budget to spend
    min_confidence: 0.3  # minimum confidence to trigger DCA

# === Optimization Settings ===
optimization:
  # Grid search settings
  grid_search:
    max_combinations: 1000
    parallel_workers: 4
  
  # Genetic algorithm settings
  genetic_algorithm:
    population_size: 50
    generations: 20
    mutation_rate: 0.1
    tournament_size: 3
    elite_size: 0.25  # percentage of population to keep as elite
  
  # Sensitivity analysis settings
  sensitivity:
    default_steps: 5  # number of steps for each parameter
    parallel_workers: 2

# === Performance Settings ===
performance:
  # Parallel processing
  parallel:
    enabled: true
    max_workers: 4
  
  # Memory management
  memory:
    max_dataframe_size: 1000000  # maximum rows in DataFrame
    cleanup_interval: 100  # simulations between cleanup
  
  # Logging
  logging:
    level: "INFO"
    format: "%(asctime)s [%(levelname)s] %(message)s"
    file: "simulation/logs/simulation.log"

# === Frontend Settings ===
frontend:
  # Chart settings
  chart:
    max_candles_display: 1000
    dca_point_size: 8
    dca_point_color: "#ff6b6b"
    entry_point_color: "#4ecdc4"
    profit_color: "#45b7d1"
    loss_color: "#f9ca24"
  
  # UI settings
  ui:
    default_symbols: ["BTCUSDT", "ETHUSDT", "ADAUSDT", "SOLUSDT"]
    default_timeframes: ["15m", "1h", "4h"]
    auto_refresh_interval: 30  # seconds
    max_simulations_history: 50

# === API Settings ===
api:
  # Rate limiting
  rate_limit:
    requests_per_minute: 60
    burst_size: 10
  
  # Response settings
  response:
    max_results: 1000
    default_page_size: 50
    max_page_size: 200
  
  # Caching
  cache:
    enabled: true
    ttl_seconds: 300  # 5 minutes
    max_size: 1000  # maximum cached responses

# === Monitoring Settings ===
monitoring:
  # Metrics collection
  metrics:
    enabled: true
    collection_interval: 60  # seconds
  
  # Performance tracking
  performance:
    track_simulation_time: true
    track_memory_usage: true
    track_api_calls: true
  
  # Alerts
  alerts:
    enabled: false
    max_simulation_time: 300  # seconds
    max_memory_usage: 1000  # MB
    error_rate_threshold: 0.1  # 10%

# === Development Settings ===
development:
  # Debug mode
  debug:
    enabled: false
    verbose_logging: false
    save_intermediate_results: false
  
  # Testing
  testing:
    use_mock_data: false
    mock_data_file: "simulation/tests/mock_data.json"
    test_symbols: ["BTCUSDT", "ETHUSDT"]
    test_timeframes: ["1h"]