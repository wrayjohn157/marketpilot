{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{Card,CardContent}from\"./ui/Card\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ConfidencePanel(){const[data,setData]=useState([]);useEffect(()=>{fetch(\"/ml/confidence\").then(res=>res.json()).then(setData).catch(()=>setData([]));},[]);const getBadgeClass=decision=>{if(decision===\"RUN\")return\"text-green-400 bg-green-900\";if(decision===\"DCA\")return\"text-emerald-400 bg-emerald-900\";if(decision===\"SKIPPED\")return\"text-red-400 bg-red-900\";return\"text-gray-400 bg-gray-800\";};// Limit to Top 3, and only include trades with a real decision\nconst filtered=data.slice(0,3);return/*#__PURE__*/_jsxs(Card,{className:\"bg-gray-900 p-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-white text-base font-semibold mb-3\",children:\"AI/ML Confidence\"}),/*#__PURE__*/_jsx(CardContent,{className:\"space-y-1\",children:filtered.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 text-sm\",children:\"No confident trades found.\"}):filtered.map((entry,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between text-sm border-b border-gray-800 pb-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-white font-mono text-xs\",children:entry.symbol}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-400 uppercase\",children:entry.rejection_reason||\"—\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-end text-right\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-base font-bold text-white\",children:entry.confidence_score.toFixed(2)}),/*#__PURE__*/_jsx(\"div\",{className:`text-xs rounded px-2 py-0.5 mt-1 ${getBadgeClass(entry.decision)}`,children:entry.decision})]})]},index))})]});}","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","jsx","_jsx","jsxs","_jsxs","ConfidencePanel","data","setData","fetch","then","res","json","catch","getBadgeClass","decision","filtered","slice","className","children","length","map","entry","index","symbol","rejection_reason","confidence_score","toFixed"],"sources":["/home/signal/market7/dashboard_frontend/src/components/ConfidencePanel.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, CardContent } from \"./ui/Card\";\n\nexport default function ConfidencePanel() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/ml/confidence\")\n      .then((res) => res.json())\n      .then(setData)\n      .catch(() => setData([]));\n  }, []);\n\n  const getBadgeClass = (decision) => {\n    if (decision === \"RUN\") return \"text-green-400 bg-green-900\";\n    if (decision === \"DCA\") return \"text-emerald-400 bg-emerald-900\";\n    if (decision === \"SKIPPED\") return \"text-red-400 bg-red-900\";\n    return \"text-gray-400 bg-gray-800\";\n  };\n\n  // Limit to Top 3, and only include trades with a real decision\n  const filtered = data.slice(0, 3);\n\n  return (\n    <Card className=\"bg-gray-900 p-4\">\n      <h2 className=\"text-white text-base font-semibold mb-3\">AI/ML Confidence</h2>\n      <CardContent className=\"space-y-1\">\n        {filtered.length === 0 ? (\n          <p className=\"text-gray-500 text-sm\">No confident trades found.</p>\n        ) : (\n          filtered.map((entry, index) => (\n            <div\n              key={index}\n              className=\"flex items-center justify-between text-sm border-b border-gray-800 pb-1\"\n            >\n              <div className=\"flex flex-col\">\n                <span className=\"text-white font-mono text-xs\">{entry.symbol}</span>\n                <span className=\"text-xs text-gray-400 uppercase\">\n                  {entry.rejection_reason || \"—\"}\n                </span>\n              </div>\n\n              <div className=\"flex flex-col items-end text-right\">\n                <span className=\"text-base font-bold text-white\">\n                  {entry.confidence_score.toFixed(2)}\n                </span>\n                <div\n                  className={`text-xs rounded px-2 py-0.5 mt-1 ${getBadgeClass(entry.decision)}`}\n                >\n                  {entry.decision}\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,IAAI,CAAEC,WAAW,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9C,cAAe,SAAS,CAAAC,eAAeA,CAAA,CAAG,CACxC,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEpCD,SAAS,CAAC,IAAM,CACdW,KAAK,CAAC,gBAAgB,CAAC,CACpBC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAACF,OAAO,CAAC,CACbK,KAAK,CAAC,IAAML,OAAO,CAAC,EAAE,CAAC,CAAC,CAC7B,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAM,aAAa,CAAIC,QAAQ,EAAK,CAClC,GAAIA,QAAQ,GAAK,KAAK,CAAE,MAAO,6BAA6B,CAC5D,GAAIA,QAAQ,GAAK,KAAK,CAAE,MAAO,iCAAiC,CAChE,GAAIA,QAAQ,GAAK,SAAS,CAAE,MAAO,yBAAyB,CAC5D,MAAO,2BAA2B,CACpC,CAAC,CAED;AACA,KAAM,CAAAC,QAAQ,CAAGT,IAAI,CAACU,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAEjC,mBACEZ,KAAA,CAACL,IAAI,EAACkB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC/BhB,IAAA,OAAIe,SAAS,CAAC,yCAAyC,CAAAC,QAAA,CAAC,kBAAgB,CAAI,CAAC,cAC7EhB,IAAA,CAACF,WAAW,EAACiB,SAAS,CAAC,WAAW,CAAAC,QAAA,CAC/BH,QAAQ,CAACI,MAAM,GAAK,CAAC,cACpBjB,IAAA,MAAGe,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,4BAA0B,CAAG,CAAC,CAEnEH,QAAQ,CAACK,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,gBACxBlB,KAAA,QAEEa,SAAS,CAAC,yEAAyE,CAAAC,QAAA,eAEnFd,KAAA,QAAKa,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BhB,IAAA,SAAMe,SAAS,CAAC,8BAA8B,CAAAC,QAAA,CAAEG,KAAK,CAACE,MAAM,CAAO,CAAC,cACpErB,IAAA,SAAMe,SAAS,CAAC,iCAAiC,CAAAC,QAAA,CAC9CG,KAAK,CAACG,gBAAgB,EAAI,GAAG,CAC1B,CAAC,EACJ,CAAC,cAENpB,KAAA,QAAKa,SAAS,CAAC,oCAAoC,CAAAC,QAAA,eACjDhB,IAAA,SAAMe,SAAS,CAAC,gCAAgC,CAAAC,QAAA,CAC7CG,KAAK,CAACI,gBAAgB,CAACC,OAAO,CAAC,CAAC,CAAC,CAC9B,CAAC,cACPxB,IAAA,QACEe,SAAS,CAAE,oCAAoCJ,aAAa,CAACQ,KAAK,CAACP,QAAQ,CAAC,EAAG,CAAAI,QAAA,CAE9EG,KAAK,CAACP,QAAQ,CACZ,CAAC,EACH,CAAC,GAnBDQ,KAoBF,CACN,CACF,CACU,CAAC,EACV,CAAC,CAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}