{"ast":null,"code":"\"use client\";\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent(_ref) {\n  let {\n    preloadedFeatures,\n    createVisualElement,\n    useRender,\n    useVisualState,\n    Component\n  } = _ref;\n  preloadedFeatures && loadFeatures(preloadedFeatures);\n  function MotionComponent(props, externalRef) {\n    /**\n     * If we need to measure the element we load this functionality in a\n     * separate class component in order to gain access to getSnapshotBeforeUpdate.\n     */\n    let MeasureLayout;\n    const configAndProps = {\n      ...useContext(MotionConfigContext),\n      ...props,\n      layoutId: useLayoutId(props)\n    };\n    const {\n      isStatic\n    } = configAndProps;\n    const context = useCreateMotionContext(props);\n    const visualState = useVisualState(props, isStatic);\n    if (!isStatic && isBrowser) {\n      useStrictMode(configAndProps, preloadedFeatures);\n      const layoutProjection = getProjectionFunctionality(configAndProps);\n      MeasureLayout = layoutProjection.MeasureLayout;\n      /**\n       * Create a VisualElement for this component. A VisualElement provides a common\n       * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n       * providing a way of rendering to these APIs outside of the React render loop\n       * for more performant animations and interactions\n       */\n      context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n    }\n    /**\n     * The mount order and hierarchy is specific to ensure our element ref\n     * is hydrated by the time features fire their effects.\n     */\n    return jsxs(MotionContext.Provider, {\n      value: context,\n      children: [MeasureLayout && context.visualElement ? jsx(MeasureLayout, {\n        visualElement: context.visualElement,\n        ...configAndProps\n      }) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)]\n    });\n  }\n  MotionComponent.displayName = `motion.${typeof Component === \"string\" ? Component : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n  const ForwardRefMotionComponent = forwardRef(MotionComponent);\n  ForwardRefMotionComponent[motionComponentSymbol] = Component;\n  return ForwardRefMotionComponent;\n}\nfunction useLayoutId(_ref2) {\n  let {\n    layoutId\n  } = _ref2;\n  const layoutGroupId = useContext(LayoutGroupContext).id;\n  return layoutGroupId && layoutId !== undefined ? layoutGroupId + \"-\" + layoutId : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n  const isStrict = useContext(LazyContext).strict;\n  /**\n   * If we're in development mode, check to make sure we're not rendering a motion component\n   * as a child of LazyMotion, as this will break the file-size benefits of using it.\n   */\n  if (process.env.NODE_ENV !== \"production\" && preloadedFeatures && isStrict) {\n    const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n    configAndProps.ignoreStrict ? warning(false, strictMessage) : invariant(false, strictMessage);\n  }\n}\nfunction getProjectionFunctionality(props) {\n  const {\n    drag,\n    layout\n  } = featureDefinitions;\n  if (!drag && !layout) return {};\n  const combined = {\n    ...drag,\n    ...layout\n  };\n  return {\n    MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props) ? combined.MeasureLayout : undefined,\n    ProjectionNode: combined.ProjectionNode\n  };\n}\nexport { createRendererMotionComponent };","map":{"version":3,"names":["jsxs","jsx","warning","invariant","forwardRef","useContext","LayoutGroupContext","LazyContext","MotionConfigContext","MotionContext","useCreateMotionContext","isBrowser","featureDefinitions","loadFeatures","motionComponentSymbol","useMotionRef","useVisualElement","createRendererMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","MotionComponent","props","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","isStatic","context","visualState","useStrictMode","layoutProjection","getProjectionFunctionality","visualElement","ProjectionNode","Provider","value","children","displayName","name","ForwardRefMotionComponent","_ref2","layoutGroupId","id","undefined","isStrict","strict","process","env","NODE_ENV","strictMessage","ignoreStrict","drag","layout","combined","isEnabled"],"sources":["/home/signal/market7/dashboard_frontend/node_modules/framer-motion/dist/es/motion/index.mjs"],"sourcesContent":["\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}