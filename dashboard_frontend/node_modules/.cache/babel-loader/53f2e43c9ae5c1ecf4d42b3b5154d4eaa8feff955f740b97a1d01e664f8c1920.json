{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import TradeCard from\"../components/ui/TradeCardEnhanced\";import SelectFilter from\"../components/ui/SelectFilter\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ActiveTradesPanel(){const[trades,setTrades]=useState([]);const[sortBy,setSortBy]=useState(\"confidence\");useEffect(()=>{const fetchTrades=async()=>{const res=await fetch(\"/dca-trades-active\");const data=await res.json();setTrades(data.dca_trades||[]);};fetchTrades();},[]);const sortTrades=trades=>{switch(sortBy){case\"pnl\":return[...trades].sort((a,b)=>(b.open_pnl||0)-(a.open_pnl||0));case\"drawdown\":return[...trades].sort((a,b)=>(b.drawdown_pct||0)-(a.drawdown_pct||0));case\"dca\":return[...trades].sort((a,b)=>(b.step||0)-(a.step||0));case\"confidence\":default:return[...trades].sort((a,b)=>(b.confidence_score||0)-(a.confidence_score||0));}};const sortedTrades=sortTrades(trades);const sortOptions=[{label:\"Confidence\",value:\"confidence\"},{label:\"PnL\",value:\"pnl\"},{label:\"Drawdown\",value:\"drawdown\"},{label:\"DCA Step\",value:\"dca\"}];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 max-w-xs\",children:/*#__PURE__*/_jsx(SelectFilter,{label:\"Sort By\",options:sortOptions,value:sortBy,onChange:setSortBy})}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 gap-4\",children:sortedTrades.map(trade=>/*#__PURE__*/_jsx(TradeCard,{trade:trade},trade.deal_id))})]});}","map":{"version":3,"names":["React","useState","useEffect","TradeCard","SelectFilter","jsx","_jsx","jsxs","_jsxs","ActiveTradesPanel","trades","setTrades","sortBy","setSortBy","fetchTrades","res","fetch","data","json","dca_trades","sortTrades","sort","a","b","open_pnl","drawdown_pct","step","confidence_score","sortedTrades","sortOptions","label","value","children","className","options","onChange","map","trade","deal_id"],"sources":["/home/signal/market7/dashboard_frontend/src/components/ActiveTradesPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TradeCard    from \"../components/ui/TradeCardEnhanced\";\nimport SelectFilter from \"../components/ui/SelectFilter\";\n\nexport default function ActiveTradesPanel() {\n  const [trades, setTrades] = useState([]);\n  const [sortBy, setSortBy] = useState(\"confidence\");\n\n  useEffect(() => {\n    const fetchTrades = async () => {\n      const res = await fetch(\"/dca-trades-active\");\n      const data = await res.json();\n      setTrades(data.dca_trades || []);\n    };\n    fetchTrades();\n  }, []);\n\n  const sortTrades = (trades) => {\n    switch (sortBy) {\n      case \"pnl\":\n        return [...trades].sort((a, b) => (b.open_pnl || 0) - (a.open_pnl || 0));\n      case \"drawdown\":\n        return [...trades].sort((a, b) => (b.drawdown_pct || 0) - (a.drawdown_pct || 0));\n      case \"dca\":\n        return [...trades].sort((a, b) => (b.step || 0) - (a.step || 0));\n      case \"confidence\":\n      default:\n        return [...trades].sort((a, b) => (b.confidence_score || 0) - (a.confidence_score || 0));\n    }\n  };\n\n  const sortedTrades = sortTrades(trades);\n\n  const sortOptions = [\n    { label: \"Confidence\", value: \"confidence\" },\n    { label: \"PnL\", value: \"pnl\" },\n    { label: \"Drawdown\", value: \"drawdown\" },\n    { label: \"DCA Step\", value: \"dca\" }\n  ];\n\n  return (\n    <div>\n      <div className=\"mb-4 max-w-xs\">\n        <SelectFilter\n          label=\"Sort By\"\n          options={sortOptions}\n          value={sortBy}\n          onChange={setSortBy}\n        />\n      </div>\n\n      <div className=\"grid grid-cols-1 gap-4\">\n        {sortedTrades.map((trade) => (\n          <TradeCard key={trade.deal_id} trade={trade} />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}