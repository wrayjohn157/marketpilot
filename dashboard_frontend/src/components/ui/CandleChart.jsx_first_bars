// src/components/ui/CandleChart.jsx

import React, { useRef, useState, useEffect } from "react";
import {
  ChartCanvas,
  Chart,
  CandlestickSeries,
  discontinuousTimeScaleProvider,
  CrossHairCursor,
  MouseCoordinateX,
  MouseCoordinateY,
  XAxis,
  YAxis,
  OHLCTooltip,
} from "react-financial-charts";

const CandleChart = ({ data, height = 300 }) => {
  const containerRef = useRef();
  const [width, setWidth] = useState(800);

  useEffect(() => {
    const resizeObserver = new ResizeObserver((entries) => {
      for (let entry of entries) {
        setWidth(entry.contentRect.width);
      }
    });
    if (containerRef.current) {
      resizeObserver.observe(containerRef.current);
    }
    return () => resizeObserver.disconnect();
  }, []);

  if (!data || data.length === 0) return <div>No data</div>;

  const formattedData = data.map((d) => ({
    ...d,
    date: new Date(d.timestamp),
  }));

  const xScaleProvider = discontinuousTimeScaleProvider.inputDateAccessor(
    (d) => d.date
  );
  const { data: chartData, xScale, xAccessor, displayXAccessor } =
    xScaleProvider(formattedData);

  const start = xAccessor(chartData[0]);
  const end = xAccessor(chartData[chartData.length - 1]);
  const margin = { left: 60, right: 60, top: 20, bottom: 30 };

  return (
    <div ref={containerRef} style={{ width: "100%" }}>
      <ChartCanvas
        height={height}
        width={width}
        ratio={1}
        margin={margin}
        data={chartData}
        xScale={xScale}
        xAccessor={xAccessor}
        displayXAccessor={displayXAccessor}
        seriesName="Price"
        xExtents={[start, end]}
      >
        <Chart id={1} yExtents={(d) => [d.high, d.low]}>
          <XAxis />
          <YAxis />
          <MouseCoordinateX displayFormat={(d) => d.toLocaleString()} />
          <MouseCoordinateY displayFormat={(d) => d.toFixed(4)} />
          <CandlestickSeries />
          <OHLCTooltip origin={[8, 16]} />
        </Chart>
        <CrossHairCursor />
      </ChartCanvas>
    </div>
  );
};

export default CandleChart;
