name: CI/CD Pipeline

on:
  push:
    branches: [ main, refactor ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock pytest-asyncio pytest-xdist
        pip install black isort flake8 mypy pre-commit
    
    - name: Lint with flake8
      run: |
        flake8 core dca fork lev utils --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 core dca fork lev utils --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Check code formatting with black
      run: |
        black --check core dca fork lev utils
    
    - name: Check import sorting with isort
      run: |
        isort --check-only core dca fork lev utils
    
    - name: Type check with mypy
      run: |
        mypy core dca fork lev utils --ignore-missing-imports
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=core --cov=dca --cov=fork --cov=lev --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Run safety check
      run: |
        safety check --file requirements.txt
    
    - name: Run bandit security linter
      run: |
        bandit -r core dca fork lev utils -f json -o bandit-report.json || true
        bandit -r core dca fork lev utils

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit
    
    - name: Run pre-commit
      uses: pre-commit/action@v3.0.0